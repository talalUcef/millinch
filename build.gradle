// 全局配置，对所有工程有效
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    group = 'com.milllch'
    version = '1.0'

    // 全局属性设置
    ext {
        junitVersion = '4.11'
        springVersion = '4.0.9.RELEASE'
        springDataVersion = '1.8.0.RELEASE'
        hibernateJPAVersion = '+'
        slf4jVersion = '1.7.12'
        // java文件编码方式设置为UTF-8
        //compileJava.options.encoding = 'UTF-8'
        //compileTestJava.options.encoding = 'UTF-8'
        [compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'
        sourceCompatibility = 1.7
    }
}

// 所有子工程共有的配置
subprojects {
    // 配置多个maven源
    repositories {
        mavenLocal()
        maven { url 'http://maven.oschina.net/content/groups/public/' }
//        mavenCentral()
    }
    // 默认情况下gradle会选用版本最高的那个依赖，有时候会带来问题
    configurations.all {
        // 有版本冲突的时候强制使用指定的版本，对于相关依赖也同样有效
        resolutionStrategy.force(
            "org.springframework:spring-core:${springVersion}",
        )
        //compile.exclude module: 'commons-logging'
        all*.exclude module: 'commons-logging'
    }
    // 公共依赖配置
    dependencies {
        compile(
            "org.springframework.data:spring-data-jpa:${springDataVersion}",
            "org.hibernate:hibernate-entitymanager:${hibernateJPAVersion}",
            "org.hibernate:hibernate-ehcache:4.3.6.Final",
            "org.springframework:spring-core:${springVersion}",
            "com.alibaba:druid:1.0.4",
            "mysql:mysql-connector-java:5.1.27",
            "org.slf4j:slf4j-api:${slf4jVersion}",
            "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
            "org.slf4j:slf4j-simple:${slf4jVersion}"
        )
        testCompile(
            "junit:junit:${junitVersion}",
        )
    }
}